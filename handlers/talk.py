from aiogram import Router, types, F
from aiogram.filters.command import Command
from utils.gpt_service import ChatGPTService
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from keyboards.prof_keyboard import make_row_kayboard

router = Router()
gpt_service = ChatGPTService()

celebrities = {'–î–∂–æ–Ω –õ–µ–Ω–Ω–æ–Ω',
               '–ö–ª–∏–Ω—Ç –ò—Å—Ç–≤—É–¥',
               '–ê–ª—å–±–µ—Ä—Ç –≠–π–Ω—à—Ç–µ–π–Ω',
               '–î–∂–æ–∞–Ω –†–æ—É–ª–∏–Ω–≥',
               }


# make common
class ChatGPTState(StatesGroup):
    waiting_for_celebrity = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    waiting_for_celebrity_prompt = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞


# /talk - –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
@router.message(Command('talk'))
async def talk_init(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer_photo(types.FSInputFile('assets/celebrity.png'))
    await message.answer(f'{message.chat.first_name}! –í—ã–±–µ—Ä–∏ –∏–∑–≤–µ—Å—Ç–Ω—É—é –ª–∏—á–Ω–æ—Å—Ç—å –¥–ª—è –æ–±—â–µ–Ω–∏—è:',
                         reply_markup=make_row_kayboard(celebrities))
    await state.set_state(ChatGPTState.waiting_for_celebrity)


@router.message(ChatGPTState.waiting_for_celebrity,
                F.text.in_(celebrities))
async def talk_set_celebrity(message: types.Message, state: FSMContext):
    character = message.text
    await state.update_data(selected_character=character)
    gpt_service.set_system_message(f'–¢—ã {character}. –û—Ç–≤–µ—á–∞–π –≤ —Å—Ç–∏–ª–µ —ç—Ç–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.')
    await message.answer(f'–¢—ã –≤—ã–±—Ä–∞–ª {character}. –ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å: ')
    await state.set_state(ChatGPTState.waiting_for_celebrity_prompt)


@router.message(ChatGPTState.waiting_for_celebrity_prompt)
async def talk_chatgpt_answer(message: types.Message, state: FSMContext):
    gpt_service.add_user_message(message.text)
    response = gpt_service.get_response()
    await message.answer(f"üí¨ {response}", reply_markup=make_row_kayboard({'–ó–∞–∫–æ–Ω—á–∏—Ç—å'}))
    await state.clear()
